##----------------------------------------------------------------------------##
#                                Basic Setting                                 #
##----------------------------------------------------------------------------##

## 256色表示設定
termcapinfo xterm* 'Co#256:pa#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm:'
attrcolor b ".I"
defbce "on"

## 起動時のライセンス画面を表示させない
startup_message off

## 日本語対応
defkanji UTF-8
defencoding UTF-8
encoding UTF-8

## Screen終了時に自動的にデタッチするか
autodetach off

## スクロールバックできる行数
defscrollback 100000

## コマンドキーの指定
escape ^Zz

sorendition "+r .M"

## ステータス行の設定(X端末のタイトルを動的に変更)
hardstatus string "%t : %h"
caption always "%{b B}[%{b Y} scouty %{b B}][ %{b G}%-w%{b M}(%{b G}%n %t%{b M})%{b G}%+w%= %{b B}][%{b M} %m/%d %c %{b B}]"

## 現在のウィンドウに対して可視ベルの設定するか
vbell off

## ベル文字がバックグラウンドに送られたときの挙動
## ^Gは通常は音声ベル
## メッセージを表示しない場合には""を指定する
bell_msg "^G"

##----------------------------------------------------------------------------##
#                              Keybinding Setting                              #
##----------------------------------------------------------------------------##

## ウィンドウの切り替え（Ctrl+矢印キー）
bindkey \033^l next
bindkey \033^h prev

bind l windowlist
bind s
bind u encoding UTF-8
bind i encoding eucJP

## 画面制御をEmacs風にする
bind -c REGION 2 split
bind -c REGION 1 only
bind -c REGION 0 remove
bind -c REGION o focus
bind -c REGION \^ resize
bind x command -c REGION

## screenバッファからへクリップボードへコピーする
bufferfile $HOME/.screen-exchange
bindkey -m ' ' eval 'msgwait 0' 'stuff \040' writebuf 'exec !!! xclip -selection clippboard $HOME/.screen-exchange' 'msgwait 0'
bindkey -m Y eval 'msgwait 0' 'stuff Y' writebuf 'exec !!! xclip -selection clippboard $HOME/.screen-exchange' 'msgwait 0'
bindkey -m y eval 'msgwait 0' 'stuff y' writebuf 'exec !!! xclip -selection clipboard$HOME/.screen-exchange' 'msgwait 0'
bindkey -m W eval 'msgwait 0' 'stuff W' writebuf 'exec !!! xclip -selection clippboard $HOME/.screen-exchange' 'msgwait 0'

screen -t docker 0
stuff "cd ~/projects/scouty && docker-compose up\012"

screen -t db 1
stuff "cd ~/projects/scouty\012docker exec -it scouty_db_1 mysql -udocker -pdocker ebdb"

screen -t sql 2
stuff "docker exec -it scouty_db_1 tail -f /tmp/sql.log"

screen -t slow 3
stuff "docker exec -it scouty_db_1 tail -f /tmp/slow_sql.log"

screen -t runserver 4
stuff "cd ~/projects/scouty\012./mymanage.py runserver_plus 0.0.0.0:4000"

screen -t test 4
stuff "cd ~/projects/scouty\012./mymanage.py test -v1 --keepdb application.sc_tests.modules.tag.service"

screen -t git 5
stuff "cd ~/projects/scouty\012"

screen -t app 6
stuff "cd ~/projects/scouty/application\012"

screen -t zsh 7
stuff "cd ~/projects/scouty\012"

screen -t zsh 8
stuff "cd ~/projects/scouty\012"

screen -t zsh 9
stuff "cd ~/projects/scouty\012"
